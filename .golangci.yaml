linters-settings:
  dupl:
    threshold: 150
  funlen:
    lines: -1 # the number of lines (code + empty lines) is not a right metric and leads to code without empty line or one-liner.
    statements: 50
  goconst:
    min-len: 2
    min-occurrences: 10
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
  gocyclo:
    min-complexity: 10
  gofmt:
    rewrite-rules:
      - pattern: "interface{}"
        replacement: "any"
  mnd:
    # don't include the "operation" and "assign"
    checks:
      - argument
      - case
      - condition
      - return
    ignored-numbers:
      - "0"
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"
    ignored-functions:
      - strings.SplitN

  lll:
    line-length: 140
  misspell:
    locale: US
  nolintlint:
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped
  revive:
    rules:
      - name: unexported-return
        disabled: true

linters:
  disable-all: true
  enable:
    - bodyclose
    - dogsled
    - errcheck
    - forbidigo
    - goconst
    - gocritic
    - gofmt
    - goimports
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - revive
    - staticcheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace
    - usestdlibvars
    - lll

issues:
  exclude-dirs: []
  exclude-rules:
    - path: ^mock_.*\.go$
      text: "exclude mock files"

run:
  tests: false # exclude test files
